# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
  pull_request:
#  schedule:
#    # run 9:00 UCT time every date, i.e. 17:00 Taipei time
#    - cron:  '0 9 * * *'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(env TZ=Asia/Taipei date +'%Y%m%d_%H%M%S')"
    - name: Get respository name
      id: repository_name
      run: echo "::set-output name=repository_name::$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')"
    - name: Get current branch
      id: branch
      run: echo "::set-output name=branch::$(echo '${{ github.ref }}' | awk -F '/' '{print $NF}')"

    - name: Upload APK
      uses: actions/upload-artifact@v2
      with:
        name: App
        path: ${{ github.workspace }}/app/build/outputs/apk/debug/app-debug.apk

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.branch.outputs.branch }}_${{ steps.date.outputs.date }}
        release_name: ${{ steps.branch.outputs.branch }}_${{ steps.date.outputs.date }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ${{ github.workspace }}/app/build/outputs/apk/debug/app-debug.apk
        asset_name: ${{ steps.repository_name.outputs.repository_name }}_${{ steps.branch.outputs.branch }}_${{ steps.date.outputs.date }}.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Send mail
      if: always()
      uses: dawidd6/action-send-mail@v3
      with:
        # mail server settings
        server_address: smtp-mail.outlook.com
        server_port: 587
        # user credentials
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        # email subject
        subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
        # email body as text
        html_body: <h1> Build ${{ job.status }} </h1></br>
                   <table>
                   <tr><td> branch </td><td><font color="#3366BB">${{ steps.branch.outputs.branch }}</font></td></tr>
                   <tr><td> build triggered by </td><td><font color="#3366BB">${{ github.actor }}</font></td></tr>
                   <tr><td> build commit message </td><td><font color="#3366BB">${{ github.event.head_commit.message }}</font></td></tr>
                   <tr><td> build commit </td><td>https://github.com/${{ github.repository }}/commit/${{ github.sha }}</td></tr>
                   <tr><td> build url </td><td>https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}</td></tr>
                   <tr><td> release url </td><td>${{ steps.create_release.outputs.html_url }}</td></tr>
                   </table>
        # comma-separated string, send email to
        to: ferrywu@arimacomm.com.tw
        # from email name
        from: github-${{ github.repository_owner }}
